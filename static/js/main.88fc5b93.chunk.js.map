{"version":3,"sources":["components/Logout/Logout.js","components/PetCard/PetCard.js","components/PetsList/PetsList.js","components/PetsPage/PetsPage.js","components/AdoptForm/AdoptForm.js","components/Adopt/Adopt.js","components/Swamp/Swamp.js","AuthenticatedApp.js","components/Signup/Signup.js","components/Login/Login.js","UnauthenticatedApp.js","App.js","reportWebVitals.js","index.js"],"names":["Logout","navigate","useNavigate","onClick","localStorage","clear","window","location","reload","PetCard","pet","handleOnDelete","currentPet","setCurrentPet","className","src","image_url","name","happiness","console","log","id","fetch","method","PetsList","userPets","petArr","map","PetsPage","AdoptForm","handleGoBack","petData","setPetData","setUserPets","onSubmit","e","preventDefault","headers","body","JSON","stringify","then","resp","json","newPet","type","placeholder","s","value","onChange","target","Adopt","health","Math","floor","random","hunger","thirst","boredom","initialPet","parseInt","user_id","getItem","useState","Swamp","fetchSwitch","start","stop","setFetchSwitch","updatedPet","setUpdatedPet","updatedHappiness","setUpdatedHappiness","increaseStat","stat","useEffect","data","c","AuthenticatedApp","intervalId","setIntervalId","decreaseStats","length","newPetObject","object","nIntervalId","setInterval","clearInterval","res","user","pets","path","element","updatedPetsArr","filter","exact","Signup","isSignedUp","switchMode","username","setUsername","email","setEmail","password","setPassword","password_confirmation","setPassword_Confirmation","passwordShown","setPasswordShown","confPasswordShown","setConfPasswordShown","setItem","catch","error","handleSignupSubmit","required","Login","ok","errors","alert","UnauthenticatedApp","setIsSignedUp","prevIsSignedUp","App","isLoggedIn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88fc5b93.chunk.js","sourcesContent":["import React from 'react'\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction Logout(){\n    let navigate = useNavigate();\n\n    function handleLogout(){\n        localStorage.clear(\"user\")\n        navigate(\"/\")\n        window.location.reload();\n    }\n\n    return(\n        <div>\n            <button onClick={handleLogout}>logout</button>\n        </div>\n    )\n}\n\nexport default Logout;","import React from 'react';\nimport {useNavigate} from 'react-router-dom';\n\nimport \"./PetCard.styles.css\"\nfunction PetCard({pet, handleOnDelete, currentPet, setCurrentPet}){\n    let navigate = useNavigate();\n    \n    function handleDelete(){\n        console.log(\"deleting...\")\n        console.log(pet.id)\n        fetch(`https://swamp-simulator.herokuapp.com/pets/${pet.id}`, {\n            method: 'DELETE'\n        })\n        handleOnDelete(pet.id)\n    }\n\n    function handleInteraction(){\n        setCurrentPet(pet)\n        navigate('/swamp')\n        console.log(\"current pet:\", currentPet)\n    }\n\n    return(\n        <div  className='petCard' >\n            <div className=\"cardImg\">\n                <img  src={pet.image_url} />\n            </div>\n            <h3>name: {pet.name}</h3>\n            <p>happiness: {pet.happiness}%</p>\n            <button onClick={handleInteraction} >interact</button>\n            <button onClick={handleDelete} >delete</button>\n        </div>\n    )\n}\n\nexport default PetCard;","import React from 'react';\n\nimport PetCard from \"../PetCard/PetCard.js\";\n\nfunction PetsList({userPets, handleOnDelete, currentPet, setCurrentPet}){\n    \n    console.log(\"pets:\", userPets)\n    const petArr = userPets.map((pet) => {\n        return(<PetCard key={pet.id} pet={pet} handleOnDelete={handleOnDelete} currentPet={currentPet} setCurrentPet={setCurrentPet} /> )\n    })\n\n    return(\n        <ul>\n            {petArr}\n        </ul>\n    )\n}\n\nexport default PetsList;","import React from 'react';\nimport {useNavigate} from 'react-router-dom'\n\nimport Logout from \"../Logout/Logout.js\"\nimport PetsList from '../PetsList/PetsList.js';\n\nfunction PetsPage({userPets, handleOnDelete, currentPet, setCurrentPet}){\n    let navigate = useNavigate();\n\n    function linkToAdopt(){\n        navigate('adopt')\n    }\n\n    return(\n        <div>\n            <PetsList userPets={userPets} handleOnDelete={handleOnDelete} currentPet={currentPet} setCurrentPet={setCurrentPet} />\n            <button onClick={linkToAdopt}>adopt a gator</button>\n            <Logout />\n        </div>\n    )\n}\n\nexport default PetsPage;","import React from 'react';\n\nimport \"./AdoptForm.styles.css\"\n\nfunction AdoptForm({handleGoBack, petData, setPetData, setUserPets, userPets}){\n\n    console.log(petData)\n\n    function handleChange(e){\n        setPetData({ ...petData, [e.target.name]: e.target.value });\n    }\n    \n    function handleSubmit(e){\n        e.preventDefault();\n        console.log(\"Sending adoption forms\");\n        fetch(\"https://swamp-simulator.herokuapp.com/pets\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(petData)\n        })\n            .then(resp => resp.json())\n            .then(newPet => setUserPets([...userPets, newPet]))\n        handleGoBack()\n    }\n\n    return(\n        <div className='adoptFormFull'>\n            <h1>pick your perfect new pal</h1>\n            <form onSubmit={handleSubmit}>\n                <input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"name\"s\n                value={petData.name}\n                onChange={handleChange}\n                /> \n                <button type=\"submit\">submit</button>\n            </form>\n            <div className=\"topRow\"> \n                <div className=\"adoptFormImg\">\n                    <img onClick={() => setPetData({...petData, image_url: \"https://i.imgur.com/Bk7DcPp.png\"})} src=\"https://i.imgur.com/Bk7DcPp.png\" />\n                </div>\n                <div className=\"adoptFormImg\">\n                    <img onClick={() => setPetData({...petData, image_url: \"https://i.imgur.com/aNB0iGY.png\"})} src=\"https://i.imgur.com/aNB0iGY.png\" />\n                </div>\n                <div className=\"adoptFormImg\">\n                    <img onClick={() => setPetData({...petData, image_url: \"https://i.imgur.com/rdCitVE.png\"})} src=\"https://i.imgur.com/rdCitVE.png\" />\n                </div>\n            </div>\n            <div className=\"middleRow\">\n                <div className=\"adoptFormImg\"> \n                    <img onClick={() => setPetData({...petData, image_url: \"https://i.imgur.com/qKCIhaw.png\"})} src=\"https://i.imgur.com/qKCIhaw.png\" />\n                </div>\n                <div className=\"adoptFormImg\">\n                    <img onClick={() => setPetData({...petData, image_url: \"https://i.imgur.com/F8q8wsW.png\"})} src=\"https://i.imgur.com/F8q8wsW.png\" />\n                </div>\n                <div className=\"adoptFormImg\">\n                    <img onClick={() => setPetData({...petData, image_url: \"https://i.imgur.com/4C5Zb2a.png\"})} src=\"https://i.imgur.com/4C5Zb2a.png\" />\n                </div>\n            </div>\n            <div className=\"bottomRow\"> \n                <div className=\"adoptFormImg\">\n                    <img onClick={() => setPetData({...petData, image_url: \"https://i.imgur.com/97mjSWz.png\"})} src=\"https://i.imgur.com/97mjSWz.png\" />\n                </div>\n                <div className=\"adoptFormImg\">\n                    <img onClick={() => setPetData({...petData, image_url: \"https://i.imgur.com/yapS10p.png\"})} src=\"https://i.imgur.com/yapS10p.png\" />\n                </div>\n                <div className=\"adoptFormImg\" >\n                    <img onClick={() => setPetData({...petData, image_url: \"https://i.imgur.com/eEL3H2v.png\"})} src=\"https://i.imgur.com/eEL3H2v.png\" />\n                </div>\n            </div>\n            \n            <button className='cancelButton' onClick={handleGoBack}>cancel</button>\n        </div>\n    )\n}\n\nexport default AdoptForm;","import React, {useState} from 'react';\nimport {useNavigate} from 'react-router-dom'\n\nimport AdoptForm from \"../AdoptForm/AdoptForm.js\"\n\nfunction Adopt({setUserPets, userPets}){   \n    let health = Math.floor(Math.random() * 100)\n    let hunger = Math.floor(Math.random() * 100)\n    let thirst = Math.floor(Math.random() * 100)\n    let boredom = Math.floor(Math.random() * 100)\n    let happiness = parseInt((health + hunger + thirst + boredom) / 4)\n\n    const initialPet = {\n        name: \"\",\n        health: health,\n        hunger: hunger,\n        thirst: thirst,\n        boredom: boredom,     \n        happiness: happiness,\n        image_url: \"\",\n        user_id: localStorage.getItem(\"user\")\n    }\n\n    const [petData, setPetData] = useState(initialPet)\n\n    console.log(initialPet)\n\n\n    let navigate = useNavigate();\n\n    function handleGoBack(){\n        navigate(-1)\n    }\n\n    return(\n        <div>\n            <AdoptForm petData={petData} setPetData={setPetData} handleGoBack={handleGoBack} setUserPets={setUserPets} userPets={userPets} />\n        </div>       \n    )\n}\n\nexport default Adopt;\n","// parseInt((updatedPet.health + updatedPet.hunger + updatedPet.thirst + updatedPet.boredom) /4)\nimport React, {useState, useEffect} from 'react';\nimport {useNavigate} from 'react-router-dom'\n\nimport \"../Swamp/Swamp.styles.css\"\n\nfunction Swamp({currentPet, start, stop, fetchSwitch, setFetchSwitch}){\n    const [updatedPet, setUpdatedPet] = useState({\n        health: currentPet.health,\n        hunger: currentPet.hunger,\n        thirst: currentPet.thirst,\n        boredom: currentPet.boredom\n    })\n    const [updatedHappiness, setUpdatedHappiness] = useState(currentPet.happiness)\n    \n    let navigate = useNavigate();\n    \n    //Navigate back to home page. In order to avoid stacking /swamp/home must nav back -1 then add to \"/home\" since \"/\" holds blank page\n    function handleNavHome(){\n        navigate(-1)\n        navigate('home')\n    }\n\n    //Function to dynamically increase pet stat via button click\n    function increaseStat(stat){\n        console.log(\"current:\", currentPet)\n        if (updatedPet[stat] >= 95) {\n            setUpdatedPet({...updatedPet, [stat]: 100})\n        }\n        else {\n            setUpdatedPet({...updatedPet, [stat]: updatedPet[stat] + 5})\n        }\n        setUpdatedHappiness(parseInt((updatedPet.health + updatedPet.hunger + updatedPet.thirst + updatedPet.boredom) /4))\n        console.log(\"updated:\", updatedPet)\n        console.log(updatedHappiness)   \n    }\n\n    //Sends patch request to update current pet stats. Only runs after average is taken and updated.\n    useEffect(() => {\n        fetch(`https://swamp-simulator.herokuapp.com/pets/${currentPet.id}`, {\n            method: 'PATCH',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                happiness: updatedHappiness,\n                health: updatedPet.health,\n                hunger: updatedPet.hunger,\n                thirst: updatedPet.thirst,\n                boredom: updatedPet.boredom\n            })\n        })\n            .then(resp => resp.json())\n            .then(data => {\n                console.log(\"posted\", data)\n                setFetchSwitch(!fetchSwitch)\n            })\n    }, [updatedHappiness])\n        \n    return(\n        <div className=\"swampBody\">\n            <button className='swampBack' onClick={handleNavHome} >back</button>\n            <div className=\"interactionBttns\">\n                <button className='intBttn' onClick={() => increaseStat(\"health\")} >give medicine</button>\n                <button className='intBttn' onClick={() => increaseStat(\"hunger\")} >give food</button>\n                <button className='intBttn' onClick={() => increaseStat(\"thirst\")} >give water</button>\n                <button className='intBttn' onClick={() => increaseStat(\"boredom\")} >give toys</button>\n            </div>\n            <div className='swampName'>\n                <h3>name: {currentPet.name}</h3>\n            </div>\n            <div className='swampImg'>\n                <img c src={currentPet.image_url} />\n            </div>\n            <div className=\"swampStats\">\n                <div className='stat1'>\n                    <p>happiness: {updatedHappiness}%</p>\n                </div>\n                <div className='stat2'>\n                    <p>health: {updatedPet.health}%</p>\n                </div>\n                <div className='stat3'>\n                    <p>hunger: {updatedPet.hunger}%</p>\n                </div>\n                <div className='stat4'>\n                    <p>thirst: {updatedPet.thirst}%</p>\n                </div>\n                <div className='stat5'>\n                    <p>boredom: {updatedPet.boredom}%</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Swamp;","import React, {useEffect, useState} from \"react\";\nimport {Routes, Route} from \"react-router-dom\"\n\nimport PetsPage from \"./components/PetsPage/PetsPage.js\";\nimport Adopt from \"./components/Adopt/Adopt.js\";\nimport Swamp from \"./components/Swamp/Swamp.js\";\n\nfunction AuthenticatedApp() {\n    const [userPets, setUserPets] = useState([])\n    const [currentPet, setCurrentPet] = useState({})\n    const [fetchSwitch, setFetchSwitch] = useState(false)\n    const [intervalId, setIntervalId] = useState(0)\n\n    const id = localStorage.getItem('user')\n\n    //UseEffect fetches current logged in user and sets their pets to the userPets state. fetchSwitch dependancy is changed via any patch request.\n    useEffect(() =>{\n        fetch(`https://swamp-simulator.herokuapp.com/users/${id}`)\n            .then(res => res.json())\n            .then(user => {\n                stop()\n                setUserPets(user.pets)\n            })\n    }, [fetchSwitch])\n    \n    //This starts decreaseStats countdown on initial page load.\n    useEffect(() => {\n        stop()\n        start()\n    }, [userPets])\n\n    //When the user deletes a pet, the state updates to reflect that change\n    function handleOnDelete(id){\n        const updatedPetsArr = userPets.filter(pet => pet.id !== id);\n        setUserPets(updatedPetsArr)\n    } \n\n    //Used to decrease the pet Stats over time\n    function decreaseStats(){\n        if(userPets.length > 0){\n            console.log(\"current\", userPets)\n            const decreasedArr = userPets.map((pet) => {\n                let object = {\n                    id: pet.id,\n                    health: pet.health <= 0 ? 0 : pet.health -= 1,\n                    hunger: pet.hunger <= 0 ? 0 : pet.hunger -= 1,\n                    thirst: pet.thirst <= 0 ? 0 : pet.thirst -= 1,\n                    boredom: pet.boredom <= 0 ? 0 : pet.boredom -= 1,\n                    happiness: pet.happiness = parseInt((pet.health + pet.hunger + pet.thirst + pet.boredom) /4)}\n                    return(object),\n                    console.log(object),\n                    updatePet(object)\n            })\n        }\n    }\n\n    function updatePet(newPetObject) {\n        console.log(\"for fetch:\", newPetObject)\n        fetch(`https://swamp-simulator.herokuapp.com/pets/${newPetObject.id}`, {\n            method: 'PATCH',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                happiness: newPetObject.happiness,\n                health: newPetObject.health,\n                hunger: newPetObject.hunger,\n                thirst: newPetObject.thirst,\n                boredom: newPetObject.boredom\n            })\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            console.log(\"posted\", data)\n            setFetchSwitch(!fetchSwitch)\n        })\n    }\n\n\n    //Function that starts count down for decreasing stats\n    function start(){\n        const nIntervalId = setInterval(decreaseStats, 15000);\n        setIntervalId(nIntervalId)\n    }\n\n    //Function that stops count down for decreasing stats\n    function stop(){\n        if(intervalId){\n            clearInterval(intervalId)\n            setIntervalId(0)\n            return\n        }        \n    }\n\n    // console.log(\"user Pets:\", userPets)\n    return(\n        <div>\n            <Routes>\n                <Route path= \"/home\" element={<PetsPage userPets={userPets} setUserPets={setUserPets} handleOnDelete={handleOnDelete} currentPet={currentPet} setCurrentPet={setCurrentPet} start={start} />}></Route>\n                <Route exact path= \"/home/adopt\" element={<Adopt setUserPets={setUserPets} userPets={userPets} />}></Route>\n                <Route path= \"/swamp\" element={<Swamp currentPet={currentPet} fetchSwitch={fetchSwitch} setFetchSwitch={setFetchSwitch} stop={stop} start={start} />}></Route>\n            </Routes>\n        </div>\n    )\n}\n\nexport default AuthenticatedApp;","import React, {useState} from \"react\";\n\nfunction Signup({isSignedUp, switchMode}){\n    const [username, setUsername] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [password_confirmation, setPassword_Confirmation] = useState(\"\")\n    const [passwordShown, setPasswordShown] = useState(false)\n    const [confPasswordShown, setConfPasswordShown] = useState(false)\n\n    function togglePasswordVisiblity(){\n        setPasswordShown(passwordShown ? false : true);\n    };\n    \n    function toggleConfPasswordVisiblity(){\n        setConfPasswordShown(confPasswordShown ? false : true);\n    };\n\n    function handleSignupSubmit(e){\n        e.preventDefault()\n        console.log(\"Creating account...\");\n        fetch(\"https://swamp-simulator.herokuapp.com/users\", {\n            method: \"POST\",\n            headers: { 'Content-Type': \"application/json\" },\n            body: JSON.stringify({username, email, password, password_confirmation})\n        })\n            .then(resp => resp.json())\n            .then(user => {\n            console.log('Success:', user)\n            localStorage.setItem(\"user\", user.id);\n            })\n            .catch(error => console.log('Error:', error))\n    }\n\n    return(\n        <div className='formContainer'>\n            <form className='LogoutForm' onSubmit={e => handleSignupSubmit(e)}>\n                <div className='nonPwInput'>\n                    <input \n                        placeholder=\"Username\"\n                        name=\"username\"\n                        type=\"text\"\n                        value={username}\n                        onChange={e => setUsername(e.target.value)}\n                        required\n                    />\n                    <input\n                        placeholder=\"Email\"\n                        name=\"email\"\n                        type=\"email\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                        required\n                    />\n                </div>\n                <input\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    type={passwordShown ? \"text\" : \"password\"}\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                    required\n                />\n                <i onClick={togglePasswordVisiblity}>view</i>\n                <input\n                    placeholder=\"Password Confirmation\"\n                    name=\"password_confirmation\"\n                    type={confPasswordShown ? \"text\" : \"password\"}\n                    value={password_confirmation}\n                    onChange={e => setPassword_Confirmation(e.target.value)}\n                    required\n                />\n                <i onClick={toggleConfPasswordVisiblity}>view</i>\n                <div className=\"auth__form-container_fields-content_button\">\n                    <button type=\"submit\">Sign Up</button>\n                </div>\n            </form>\n            <p>\n                {isSignedUp\n                    ? \"have an account? \"\n                    : \"need an account? \"}\n                <em onClick={switchMode}>{isSignedUp ? \"sign in\" : \"sign up\"}</em>\n            </p>\n        </div>\n    )\n}\n\nexport default Signup;","import React, {useState} from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport './Login.styles.css'\n\nfunction Login({isSignedUp, switchMode}){\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [passwordShown, setPasswordShown] = useState(false)\n\n    let navigate = useNavigate();\n    \n\n    function togglePasswordVisiblity(){\n        setPasswordShown(passwordShown ? false : true);\n    };\n\n    function handleSubmitSignIn(e){\n        e.preventDefault();\n        console.log(\"Signing in...\")\n        fetch(\"https://swamp-simulator.herokuapp.com/login\", {\n            method: \"POST\",\n            headers: {\n            \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ username, password }),\n        }).then((res) => {\n            if (res.ok) {\n            res.json().then((user) => {\n                localStorage.setItem(\"user\", user.id);\n                navigate(\"home\")\n                window.location.reload();\n            });\n            } else {\n            res.json().then((errors) => {\n                console.error(errors);\n                alert(\"Invalid Credentials\");\n            });\n            }\n        });\n    }\n\n    return(\n        <div className=\"formContainer\">\n            <form className=\"loginForm\" id=\"loginForm\" onSubmit={handleSubmitSignIn}> \n            <div className='nonPwInput'>   \n                <input\n                    className=\"username\"\n                    placeholder=\"Username\"\n                    name=\"username\"\n                    type=\"username\"\n                    value={username}\n                    onChange={e => setUsername(e.target.value)}\n                    required\n                />\n            </div>\n                    <input\n                        className=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        type={passwordShown ? \"text\" : \"password\"}\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        required\n                    />\n                    <i id=\"view\" onClick={togglePasswordVisiblity}>view</i>\n                <div className=\"auth__form-container_fields-content_button\">\n                    <button id=\"signInButton\"type=\"submit\">Sign In</button>\n                </div>\n            </form>\n            <p>\n                {isSignedUp\n                    ? \"have an account? \"\n                    : \"need an account? \"}\n                <em onClick={switchMode}>{isSignedUp ? \"sign in\" : \"sign up\"}</em>\n            </p>\n        </div>\n    )\n}\n\nexport default Login;","import React, {useState} from \"react\";\n\nimport Signup from \"./components/Signup/Signup.js\"\nimport Login from \"./components/Login/Login.js\"\n\nfunction UnauthenticatedApp(){\n    const [isSignedUp, setIsSignedUp] = useState(true);\n\n    function switchMode(){\n        setIsSignedUp((prevIsSignedUp) => !prevIsSignedUp);\n    };\n    \n    \n    return(\n        <div>\n            <h1 className='header'>swamp simulator</h1>\n            {isSignedUp ? (\n                <Signup isSignedUp={isSignedUp} switchMode={switchMode} />\n            ) : (\n                <Login isSignedUp={isSignedUp} switchMode={switchMode} />\n            )}\n        </div>\n    )\n}\n\nexport default UnauthenticatedApp;","import './App.css';\nimport React, {useState} from 'react';\nimport { BrowserRouter as Router} from \"react-router-dom\";\n\nimport AuthenticatedApp from \"./AuthenticatedApp.js\"\nimport UnauthenticatedApp from './UnauthenticatedApp';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem(\"user\"))\n\n  if (isLoggedIn === false) {\n    return(\n      <Router>\n        <UnauthenticatedApp />\n      </Router>\n    )}\n  else {\n    return(\n      <Router>\n        <AuthenticatedApp />\n      </Router>\n    )}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}